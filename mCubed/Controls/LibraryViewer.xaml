<UserControl x:Class="mCubed.Controls.LibraryViewer"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:mCubed.Controls"
	xmlns:core="clr-namespace:mCubed.Core"
	xmlns:md="clr-namespace:mCubed.MetaData"
	xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase">
	<UserControl.Resources>
		<ResourceDictionary Source="../Resources/Resources.xaml"/>
	</UserControl.Resources>
	<Border DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" BorderThickness="2" Background="Transparent">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" SharedSizeGroup="GroupSortRow"/>
				<RowDefinition Height=".6*"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height=".4*" x:Name="MDIRow"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto" SharedSizeGroup="GroupSortColumn"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<controls:ColumnOrganizer Grid.Row="0" Grid.Column="0" ColumnSettings="{Binding Path=Library.ColumnSettings}" Header="Group By"  SelectedColumnGroup="GroupBy" />
			<controls:ColumnOrganizer Grid.Row="0" Grid.Column="2" ColumnSettings="{Binding Path=Library.ColumnSettings}" Header="Sort By"  SelectedColumnGroup="SortBy" />
			<controls:ColumnSelector Placement="MousePoint" ShowSelectedColumns="True" ColumnDeselected="OnDisplayColumnDeselected" ColumnSelected="OnDisplayColumnSelected"
								ColumnSettings="{Binding Path=Library.ColumnSettings}" SelectedColumnGroup="Display" StaysOpen="False" x:Name="DisplayColumnSelector" />
			<ListView Grid.Row="1" Grid.ColumnSpan="3" ItemsSource="{Binding Path=Library.MediaFiles.Structure}" SelectionChanged="OnSelectedMediaChanged"
					GridViewColumnHeader.Click="OnGridViewColumnHeaderClicked" AllowDrop="True" Drop="OnMediaFileDrop" x:Name="SelectedMedia">
				<ListView.Resources>
					<controls:GroupItemIndentConverter x:Key="GroupItemIndentConverter" />
					<controls:GroupItemMarginConverter x:Key="GroupItemMarginConverter" />
					<controls:GroupItemWidthConverter x:Key="GroupItemWidthConverter" />
					<controls:IsGroupItemConverter x:Key="IsGroupItemConverter" />
					<controls:DirectoryArrayConverter x:Key="DirectoryArrayConverter" />
					<controls:DirectoryCountConverter x:Key="DirectoryCountConverter" />
					<controls:CommandCountConverter x:Key="CommandCountConverter" />
					<ContextMenu x:Key="ListView_ContextMenu">
						<!-- Active Media Options -->
						<MenuItem Header="Play" Click="OnMediaFilePlay"/>
						<MenuItem Header="Show in Windows Explorer" Click="OnMediaFileShowExplorer"/>
						<Separator/>

						<!-- Selected Media Options -->
						<MenuItem Header="Execute Command..." ItemsSource="{Binding Source={x:Static core:Utilities.MainSettings}, Path=Commands}" DisplayMemberPath="DisplayName"
								IsEnabled="{Binding Source={x:Static core:Utilities.MainSettings}, Path=Commands.Count, Converter={StaticResource CommandCountConverter}}">
							<MenuItem.ItemContainerStyle>
								<Style TargetType="{x:Type MenuItem}">
									<Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuItem}}}"/>
									<EventSetter Event="MenuItem.Click" Handler="OnMediaExecuteCommand" />
								</Style>
							</MenuItem.ItemContainerStyle>
						</MenuItem>
						<MenuItem Header="Copy To..." ItemsSource="{Binding Source={x:Static core:Utilities.MainSettings}, Path=Libraries}">
							<MenuItem.ItemTemplate>
								<HierarchicalDataTemplate ItemsSource="{Binding Path=Directories, Converter={StaticResource DirectoryArrayConverter}}">
									<ContentPresenter Content="{Binding Path=DisplayName}" RecognizesAccessKey="True"/>
									<HierarchicalDataTemplate.ItemTemplate>
										<DataTemplate>
											<ContentPresenter Content="{Binding}" RecognizesAccessKey="True"/>
										</DataTemplate>
									</HierarchicalDataTemplate.ItemTemplate>
									<HierarchicalDataTemplate.ItemContainerStyle>
										<Style TargetType="{x:Type MenuItem}">
											<Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuItem}}, Path=DataContext}" />
											<EventSetter Event="MenuItem.Click" Handler="OnMediaCopyTo" />
										</Style>
									</HierarchicalDataTemplate.ItemContainerStyle>
								</HierarchicalDataTemplate>
							</MenuItem.ItemTemplate>
							<MenuItem.ItemContainerStyle>
								<Style TargetType="{x:Type MenuItem}">
									<Setter Property="IsEnabled" Value="{Binding Path=Directories, Converter={StaticResource DirectoryCountConverter}}"/>
									<EventSetter Event="MenuItem.Click" Handler="OnMediaCopyTo" />
								</Style>
							</MenuItem.ItemContainerStyle>
						</MenuItem>
						<MenuItem Header="Move To..." ItemsSource="{Binding Source={x:Static core:Utilities.MainSettings}, Path=Libraries}">
							<MenuItem.ItemTemplate>
								<HierarchicalDataTemplate ItemsSource="{Binding Path=Directories, Converter={StaticResource DirectoryArrayConverter}}">
									<ContentPresenter Content="{Binding Path=DisplayName}" RecognizesAccessKey="True"/>
									<HierarchicalDataTemplate.ItemTemplate>
										<DataTemplate>
											<ContentPresenter Content="{Binding}" RecognizesAccessKey="True"/>
										</DataTemplate>
									</HierarchicalDataTemplate.ItemTemplate>
									<HierarchicalDataTemplate.ItemContainerStyle>
										<Style TargetType="{x:Type MenuItem}">
											<Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuItem}}, Path=DataContext}" />
											<EventSetter Event="MenuItem.Click" Handler="OnMediaMoveTo" />
										</Style>
									</HierarchicalDataTemplate.ItemContainerStyle>
								</HierarchicalDataTemplate>
							</MenuItem.ItemTemplate>
							<MenuItem.ItemContainerStyle>
								<Style TargetType="{x:Type MenuItem}">
									<Setter Property="IsEnabled" Value="{Binding Path=Directories, Converter={StaticResource DirectoryCountConverter}}"/>
									<EventSetter Event="MenuItem.Click" Handler="OnMediaMoveTo" />
								</Style>
							</MenuItem.ItemContainerStyle>
						</MenuItem>
						<MenuItem Header="Remove from Library" Click="OnMediaRemove"/>
						<MenuItem Header="Remove from Library &amp; Computer" Click="OnMediaRemoveComputer"/>
						<Separator/>

						<!-- Library Options -->
						<MenuItem Header="Add..." Click="OnMediaAdd"/>
						<MenuItem Header="Reload Library" Click="OnMediaReload"/>
						<MenuItem Header="Seek to Now Playing" Click="OnMediaSeekToNowPlaying"/>
						<Separator/>

						<!-- Selected Meta-Data Options -->
						<MenuItem Header="Auto-Populate Track Numbers" Click="OnMediaAutoPopulateTrack"/>
						<MenuItem Header="Auto-Rename" Click="OnMediaAutoRename"/>
						<MenuItem Header="Load into Manager" Click="OnMediaLoaded"/>
					</ContextMenu>
				</ListView.Resources>
				<ListView.ItemContainerStyle>
					<Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
						<Setter Property="controls:SelectorExtension.IsSelectable" Value="False"/>
						<Setter Property="controls:SelectorExtension.IsGridViewRow" Value="False"/>
						<EventSetter Event="PreviewMouseDown" Handler="OnMediaFileSelected"/>
						<EventSetter Event="MouseDoubleClick" Handler="OnMediaFilePlay"/>
						<Style.Triggers>
							<DataTrigger Binding="{Binding Converter={StaticResource IsGroupItemConverter}}" Value="False">
								<Setter Property="ContextMenu" Value="{StaticResource ListView_ContextMenu}"/>
								<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
								<Setter Property="controls:SelectorExtension.IsSelectable" Value="True"/>
								<Setter Property="controls:SelectorExtension.IsGridViewRow" Value="True"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</ListView.ItemContainerStyle>
				<ListView.ItemTemplate>
					<DataTemplate>
						<Grid Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollViewer}}, Path=HorizontalOffset, Converter={StaticResource GroupItemMarginConverter}}"
							 Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollViewer}}, Path=ViewportWidth, Converter={StaticResource GroupItemWidthConverter}}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="5"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<TextBlock FontWeight="Bold" FontSize="13" Foreground="{DynamicResource SelectorOutline}" Margin="{Binding Depth, Converter={StaticResource GroupItemIndentConverter}}" Text="{Binding Key}"/>
							<Border Grid.Column="2" Style="{StaticResource {x:Type Border}}" Height="1" />
						</Grid>
					</DataTemplate>
				</ListView.ItemTemplate>
				<ListView.View>
					<GridView x:Name="LibraryGridView">
						<GridViewColumn>
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<Path HorizontalAlignment="Center" VerticalAlignment="Center">
										<Path.Style>
											<Style BasedOn="{StaticResource RightArrowPath}" TargetType="{x:Type Path}">
												<Setter Property="Visibility" Value="Hidden"/>
												<Style.Triggers>
													<DataTrigger Binding="{Binding IsLoaded}" Value="True">
														<Setter Property="Visibility" Value="Visible"/>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</Path.Style>
									</Path>
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
					</GridView>
				</ListView.View>
			</ListView>
			<GridSplitter Grid.Row="2" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="10" Background="Transparent" x:Name="MDISplitter"/>
			<md:MDIManager Grid.IsSharedSizeScope="False" Grid.Row="3" Grid.ColumnSpan="3" x:Name="MetaDataManager"/>
			<controls:ProgressManager Grid.Row="4" Grid.ColumnSpan="3"/>
		</Grid>
	</Border>
</UserControl>