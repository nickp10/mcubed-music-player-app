<UserControl x:Class="mCubed.Controls.PlayerControls"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:mCubed.Controls"
	xmlns:core="clr-namespace:mCubed.Core">
	<UserControl.Resources>
		<ResourceDictionary Source="../Resources/Resources.xaml"/>
	</UserControl.Resources>
	<Border DataContext="{Binding Source={x:Static core:Utilities.MainSettings}, Path=LibraryCurrent}" Background="{DynamicResource MainBrush}" BorderThickness="2">
		<Grid Margin="10">
			<Grid.RowDefinitions>
				<RowDefinition Height=".5*"/>
				<RowDefinition Height="5"/>
				<RowDefinition Height=".5*"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<WrapPanel Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">
				<Button Content="q" Tag="Restart" ToolTip="Restart the current playing media" Click="MediaButton_Clicked">
					<Button.Style>
						<Style TargetType="{x:Type Button}" BasedOn="{StaticResource MediaButton}">
							<Setter Property="IsEnabled" Value="False"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=MediaObject.State}" Value="Play">
									<Setter Property="IsEnabled" Value="True"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding Path=MediaObject.State}" Value="Pause">
									<Setter Property="IsEnabled" Value="True"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Button.Style>
				</Button>
				<Button Click="MediaButton_Clicked">
					<Button.Style>
						<Style TargetType="{x:Type Button}" BasedOn="{StaticResource MediaButton}">
							<Setter Property="Content" Value="4"/>
							<Setter Property="Tag" Value="Play"/>
							<Setter Property="ToolTip" Value="Play the current loaded media"/>
							<Setter Property="IsEnabled" Value="True"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=MediaObject.State}" Value="Play">
									<Setter Property="Content" Value=";"/>
									<Setter Property="Tag" Value="Pause"/>
									<Setter Property="ToolTip" Value="Pause playback of the current media"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding Path=MediaObject.State}" Value="Pause">
									<Setter Property="ToolTip" Value="Resume playback of the current media"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding Path=MediaObject.Path}" Value="{x:Null}">
									<Setter Property="IsEnabled" Value="False"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Button.Style>
				</Button>
				<Button Tag="Stop" ToolTip="Stop playback of the current media" Click="MediaButton_Clicked">
					<Button.Content>
						<![CDATA[<]]>
					</Button.Content>
					<Button.Style>
						<Style TargetType="{x:Type Button}" BasedOn="{StaticResource MediaButton}">
							<Setter Property="IsEnabled" Value="False"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=MediaObject.State}" Value="Play">
									<Setter Property="IsEnabled" Value="True"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding Path=MediaObject.State}" Value="Pause">
									<Setter Property="IsEnabled" Value="True"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Button.Style>
				</Button>
				<Button Content="S" Tag="ToggleShuffle" Click="MediaButton_Clicked">
					<Button.Style>
						<Style TargetType="{x:Type Button}" BasedOn="{StaticResource NormalMediaButton}">
							<Setter Property="ToolTip" Value="Shuffle mode is off. Click to turn shuffle mode on." />
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=MediaOrderCurrent.Type}" Value="Shuffle">
									<Setter Property="ToolTip" Value="Shuffle mode is on. Click to turn shuffle mode off." />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Button.Style>
				</Button>
			</WrapPanel>
			<WrapPanel Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">
				<Button Content="9" Tag="Prev" ToolTip="Play the media previous to the current media" Click="MediaButton_Clicked" Style="{StaticResource MediaButton}" IsEnabled="{Binding Path=SelectPrevExists}"/>
				<Button Content="M" Tag="ToggleMini" ToolTip="Show the mini/full player" Click="MediaButton_Clicked" Style="{StaticResource NormalMediaButton}"/>
				<Button Content=":" Tag="Next" ToolTip="Play the media next to the current media" Click="MediaButton_Clicked" Style="{StaticResource MediaButton}" IsEnabled="{Binding Path=SelectNextExists}"/>
				<Button Tag="ToggleRepeat" Click="MediaButton_Clicked">
					<Button.Style>
						<Style TargetType="{x:Type Button}" BasedOn="{StaticResource NormalMediaButton}">
							<Setter Property="Content" Value="NR"/>
							<Setter Property="ToolTip" Value="No repeat action. Click to repeat the current media."/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=RepeatStatus}" Value="RepeatMedia">
									<Setter Property="Content" Value="RM"/>
									<Setter Property="ToolTip" Value="Repeat the current media. Click to repeat the current library."/>
								</DataTrigger>
								<DataTrigger Binding="{Binding Path=RepeatStatus}" Value="RepeatLibrary">
									<Setter Property="Content" Value="RL"/>
									<Setter Property="ToolTip" Value="Repeat the current library. Click for no repeat action."/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Button.Style>
				</Button>
			</WrapPanel>
			<WrapPanel Grid.Row="0" Grid.RowSpan="3" Grid.Column="1" VerticalAlignment="Center" Margin="10,0">
				<TextBlock Text="{Binding Path=MediaObject.PositionString, TargetNullValue=00:00}" VerticalAlignment="Center"/>
				<controls:ProgressSlider Margin="10,0" Width="200" Seek="OnSeek" ProgressValue="{Binding Path=MediaObject.Progress}"
									ProgressMaximum="{Binding Path=MediaObject.Length.TotalMilliseconds}"/>
				<TextBlock Text="{Binding Path=MediaObject.LengthString, TargetNullValue=00:00}" VerticalAlignment="Center"/>
			</WrapPanel>
		</Grid>
	</Border>
</UserControl>
